name: Build Module

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      major:
        type: number
        description: 'Major version increment by? (e.g. 1)'
        default: 0
        required: true
      minor:
        type: number
        description: 'Minor version increment by? (e.g. 1)'
        default: 1
        required: true
      create_draft_release:
        type: boolean
        description: 'Create Draft release'
        default: false
        required: true

jobs:
  build-release:
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      YT_VERSION: '20.14.43'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: Yakov5776/gh-apkmirror-dl@v1.3
        with:
          org: 'google-inc'
          repo: 'youtube'
          version: "${{ env.YT_VERSION }}"
          bundle: false
          filename: 'com.google.android.youtube.apk'

      - name: Move APK to module/base
        run: |
          mkdir  -p ./module/base/
          mv ./com.google.android.youtube.apk ./module/base/
          sed -i 's/PATCHED_YT_VERSION=".*"/PATCHED_YT_VERSION="${{ env.YT_VERSION }}"/' ./module/customize.sh
          sed -i "s/^ytVersion=.*/ytVersion=${{ env.YT_VERSION }}/" ./module/module.prop

      - name: Generate Patched Youtube APK
        run: |
          shopt -s nullglob
          patch_files=( *.rvp )
          rvx_cli=( *.jar )
          base_apk=( module/base/*.apk )
          
          if [ ${#patch_files[@]} -eq 0 ]; then
            echo "Error: No .rvp patch file found." >&2
            exit 1
          fi
          if [ ${#rvx_cli[@]} -eq 0 ]; then
            echo "Error: No .jar CLI file found." >&2
            exit 1
          fi
          if [ ${#base_apk[@]} -eq 0 ]; then
            echo "Error: No base APK found in /module/base/." >&2
            exit 1
          fi
          
          patch_file="${patch_files[0]}"
          cli_jar="${rvx_cli[0]}"
          apk_file="${base_apk[0]}"
          
          echo "Using patch file: $patch_file"
          echo "Using CLI JAR: $cli_jar"
          echo "Using base APK: $apk_file"
          echo "Signer: ${{ github.repository_owner }}"
          
          args=(
            # Hide ads
            --ei 183
            # Video ads
            --ei 184
            # Copy video URL
            --ei 185
            # Remove viewer discretion dialog
            --ei 186
            # Disable double tap actions
            --ei 187
            # Downloads
            --ei 188
            # Seekbar
            --ei 189
            # Swipe controls
            --ei 190
            # Disable auto captions
            --ei 191
            # Custom branding
            --ei 192
            -OappName=YouTube
            -OiconPath=ReVanced*Logo
            # Change header
            --ei 193
            # Hide video action buttons
            --ei 194
            # Navigation buttons
            --ei 195
            # Hide player overlay buttons
            --ei 196
            # Change form factor
            --ei 197
            # Hide end screen cards
            --ei 198
            # Hide end screen suggested video
            --ei 199
            # Disable fullscreen ambient mode
            --ei 200
            # Hide layout components
            --ei 201
            # Hide info cards
            --ei 202
            # Hide player flyout menu items
            --ei 203
            # Hide related video overlay
            --ei 204
            # Disable rolling number animations
            --ei 205
            # Hide Shorts components
            --ei 206
            -OhideShortsAppShortcut=true
            -OhideShortsWidget=true
            # Disable sign in to TV popup
            --ei 207
            # Hide timestamp
            --ei 108
            # Miniplayer
            --ei 209
            # Disable player popup panels
            --ei 210
            # Exit fullscreen mode
            --ei 211
            # Open videos fullscreen
            --ei 212
            # Custom player overlay opacity
            --ei 213
            # Return YouTube Dislike
            --ei 214
            # Wide search bar
            --ei 215
            # Shorts autoplay
            --ei 216
            # Open Shorts in regular player
            --ei 217
            # SponsorBlock
            --ei 218
            # Spoof app version
            --ei 219
            # Change start page
            --ei 220
            # Disable resuming Shorts on startup
            --ei 221
            # Alternative thumbnails
            --ei 223
            # Bypass image region restrictions
            --ei 224
            # Announcements
            --di 225
            # Always repeat (removed)
            # Remove background playback restrictions
            --ei 226
            # Enable debugging
            --di 227
            # Spoof device dimensions
            --ei 228
            # Check watch history domain name resolution
            --ei 229
            # GmsCore support
            --di 230
            # Disable haptic feedback
            --ei 231
            # Bypass URL redirects
            --ei 232
            # Open links externally
            --ei 233
            # Loop video
            --ei 234
            # Sanitize sharing links
            --ei 235
            # Spoof video streams
            --ei 236
            # Force original audio
            --ei 237
            # Disable video codecs
            --ei 238
            # Disable HDR video (removed)
            # Video quality
            --ei 239
            # Playback speed
            --ei 240
            "$apk_file"
          )
          
          java -jar "$cli_jar" patch -p "$patch_file" --ei 222 -OdarkThemeBackgroundColor="@android:color/black" -o "com.google.android.youtube_amoled.apk" -t "./temp" --purge --signer "${{ env.REPO_OWNER }}" "${args[@]}"
          java -jar "$cli_jar" patch -p "$patch_file" --ei 222 -OdarkThemeBackgroundColor="@android:color/system_neutral1_900" -OlightThemeBackgroundColor="@android:color/system_neutral1_50" -o "com.google.android.youtube_material.apk" -t "./temp" --purge --signer "${{ env.REPO_OWNER }}" "${args[@]}"

      - name: Read current module.prop
        id: read_version
        run: |
          cd ./module
          VERSION=$(grep '^version=' module.prop | cut -d'=' -f2)
          VERSION_CODE=$(grep '^versionCode=' module.prop | cut -d'=' -f2)
          
          MAJOR="${{ github.event.inputs.major }}"
          MINOR="${{ github.event.inputs.minor }}"
          
          IFS='.' read -r CURRENT_MAJOR CURRENT_MINOR <<< "$VERSION"
          NEW_MAJOR=$((CURRENT_MAJOR + MAJOR))
          if [ "$MAJOR" -gt 0 ]; then
              NEW_MINOR="$MINOR"
          else
              NEW_MINOR=$((CURRENT_MINOR + MINOR))
          fi
          NEW_VERSION="$NEW_MAJOR.$NEW_MINOR"
          NEW_VERSIONCODE=$((VERSION_CODE + 1))
          
          echo "new_version=$NEW_VERSION" >> "$GITHUB_ENV"
          echo "new_versioncode=$NEW_VERSIONCODE" >> "$GITHUB_ENV"

      - name: Update module.prop
        run: |
          cd ./module
          sed -i "s/^version=.*/version=${{ env.new_version }}/" module.prop
          sed -i "s/^versionCode=.*/versionCode=${{ env.new_versioncode }}/" module.prop
          cat module.prop

      - name: Create amoled module zip
        run: |
          rm -rf module/apk
          mkdir -p module/apk
          cp com.google.android.youtube_amoled.apk module/apk/com.google.android.youtube.apk
          MODULE_NAME="Revanced-YT-amoled-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}"
          # Update the updateJson URL inside module.prop
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          cd module
          sed -i "s|^updateJson=.*|updateJson=https://raw.githubusercontent.com/${{ github.repository }}/${BRANCH_NAME}/update_amoled.json|g" module.prop
          zip -9 -r "../$MODULE_NAME.zip" . -x "*.git*" -x ".github/*" -x "*.yml" -x "*apk.keystore*" -x "README.md"

      - name: Upload amoled Artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 9
          name: Revanced-YT-amoled-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}
          path: "module/*"

      - name: Create material module zip
        run: |
          rm -rf module/apk
          mkdir -p module/apk
          cp com.google.android.youtube_material.apk module/apk/com.google.android.youtube.apk
          MODULE_NAME="Revanced-YT-material-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}"
          # Update the updateJson URL inside module.prop
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          cd module
          sed -i "s|^updateJson=.*|updateJson=https://raw.githubusercontent.com/${{ github.repository }}/${BRANCH_NAME}/update_material.json|g" module.prop
          zip -9 -r "../$MODULE_NAME.zip" . -x "*.git*" -x ".github/*" -x "*.yml" -x "*apk.keystore*" -x "README.md"

      - name: Upload material Artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 9
          name: Revanced-YT-material-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}
          path: "module/*"

      - name: Create amoled module pre-installed zip
        run: |
          rm -rf module/apk
          rm -rf module/base
          mkdir -p module/apk
          cp com.google.android.youtube_amoled.apk module/apk/com.google.android.youtube.apk
          MODULE_NAME="Revanced-YT-amoled-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}"
          # Update the updateJson URL inside module.prop
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          cd module
          sed -i "s|^updateJson=.*|updateJson=https://raw.githubusercontent.com/${{ github.repository }}/${BRANCH_NAME}/update_amoled.json|g" module.prop
          zip -9 -r "../$MODULE_NAME.zip" . -x "*.git*" -x ".github/*" -x "*.yml" -x "*apk.keystore*" -x "README.md"

      - name: Upload amoled Artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 9
          name: Revanced-YT-amoled-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}
          path: "module/*"

      - name: Create material module pre-installed zip
        run: |
          rm -rf module/apk
          rm -rf module/base
          mkdir -p module/apk
          cp com.google.android.youtube_material.apk module/apk/com.google.android.youtube.apk
          MODULE_NAME="Revanced-YT-material-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}"
          # Update the updateJson URL inside module.prop
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          cd module
          sed -i "s|^updateJson=.*|updateJson=https://raw.githubusercontent.com/${{ github.repository }}/${BRANCH_NAME}/update_material.json|g" module.prop
          zip -9 -r "../$MODULE_NAME.zip" . -x "*.git*" -x ".github/*" -x "*.yml" -x "*apk.keystore*" -x "README.md"

      - name: Upload material Artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 9
          name: Revanced-YT-material-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}
          path: "module/*"

      - name: Commit updated module.prop
        if: ${{ inputs.create_draft_release }}
        run: |
          cd ./module
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add module.prop
          git commit -m "Bump version to ${{ env.new_version }} (${{ env.new_versioncode }})"
          git push origin HEAD:${{ github.ref_name }}
          
          cd ..
          git tag v${{ env.new_version }}
          git push origin v${{ env.new_version }}

      - name: Create Release
        id: create_release
        if: ${{ inputs.create_draft_release }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.new_version }}
          release_name: ${{ env.new_version }}
          draft: true
          prerelease: ${{ github.ref == 'refs/heads/main' && 'false' || 'true' }}

      - name: Upload Release Asset - Amoled
        if: ${{ inputs.create_draft_release }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Revanced-YT-amoled-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_name: Revanced-YT-amoled-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - Material
        if: ${{ inputs.create_draft_release }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Revanced-YT-material-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_name: Revanced-YT-material-For-SUSFS-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - Amoled Preinstalled
        if: ${{ inputs.create_draft_release }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Revanced-YT-amoled-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_name: Revanced-YT-amoled-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - Material Preinstalled
        if: ${{ inputs.create_draft_release }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Revanced-YT-material-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_name: Revanced-YT-material-For-SUSFS-preinstalled-${{ env.YT_VERSION }}-${{ env.new_versioncode }}.zip
          asset_content_type: application/zip